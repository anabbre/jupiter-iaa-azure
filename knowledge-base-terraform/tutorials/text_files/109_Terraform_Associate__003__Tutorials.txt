Terraform Associate (003) Tutorials
Progress through these tutorials to prepare for the Terraform Associate (003) certification exam.
Start
37 tutorials
3min
What is Infrastructure as Code with Terraform?
Learn how infrastructure as code lets you safely build, change, and manage infrastructure. Try Terraform.
Terraform
Interactive
Video
11min
Lock and upgrade provider versions
Manage your provider versions using the dependency lock file. Use version constraints to filter provider versions compatible with your configuration. Update your lock file to use a new provider version.
Terraform
14min
Create infrastructure
Authenticate to AWS and create infrastructure with Terraform. Write and validate Terraform configuration, initialize a configuration directory, and plan and apply a configuration to create infrastructure.
Terraform
Interactive
Video
10min
Manage infrastructure
Update your infrastructure configuration and apply changes with Terraform. Add variables and output values to your configuration. Use a module to reuse configuration.
Terraform
Interactive
Video
4min
Destroy infrastructure
Destroy AWS infrastructure managed by Terraform. Remove a resource from your configuration. Run and apply a destroy plan to remove all of your workspace's infrastructure.
Terraform
Interactive
Video
11min
Collaborate using HCP Terraform
Configure Terraform to store state in HCP Terraform. Add a `cloud` block to your configuration to configure your HCP Terraform integration.
Terraform
Interactive
Video
16min
Initialize Terraform configuration
Run `terraform init` to initialize a Terraform backend, install providers, download modules, and explore the lock file and .terraform directory.
Terraform
23min
Create a Terraform plan
Learn how Terraform constructs an execution plan. Export a plan with the -out flag, review the plan contents, and apply a saved plan.
Terraform
19min
Apply Terraform configuration
Provision a Docker container with Terraform, introduce and handle an apply error, and perform basic troubleshooting.
Terraform
10min
Manage Terraform versions
Update an existing configuration to work with a newer version of Terraform. Use the required_version setting to pin the Terraform versions for your projects. Manage different versions of Terraform across your team.
Terraform
20min
Customize Terraform configuration with variables
Use Terraform input variables, including lists, maps, strings, and booleans, to parameterize your Terraform configuration.
Terraform
13min
Protect sensitive input variables
Protect sensitive values from accidental exposure using Terraform sensitive input variables. Provision a web application with Terraform, and mark input variables as sensitive to restrict when Terraform prints them out to the console.
Terraform
10min
Output data from Terraform
Use output values to export data about the resources Terraform manages. Hide sensitive output values.
Terraform
14min
Query data sources
Use a data source to configure an EC2 instance with an appropriate AMI for the current region. Use a remote state data source to share data between Terraform projects and to support multiple availability zones.
Terraform
10min
Create resource dependencies
Create an implicit dependency between an EC2 instance and its Elastic IP using variable interpolation. Create explicit dependencies on an S3 Bucket and SQS Queue with depends_on. Learn how Terraform creates independent resources in parallel.
Terraform
12min
Perform dynamic operations with functions
Use templatefile and lookup functions to generate dynamic user data for an EC2 instance and find a region-specific AMI.
Terraform
11min
Create dynamic expressions
Use locals to assign expressions to variables for reuse, conditionals to declare if/then scenarios, and the splat expression to return attributes from complex value types.
Terraform
7min
Modules overview
Read about how Terraform modules make configuration easier to organize, understand, reuse, and share. Learn about the directory structure of a module, and how to call them.
Terraform
12min
Use registry modules in configuration
Use modules from the public Terraform Registry to define an Amazon VPC containing two EC2 instances. Select module and root input and output variables, install the modules, and apply the configuration.
Terraform
Interactive
15min
Build and use a local module
Write a local module to create an Amazon S3 bucket hosting a static website. Create a module directory, write the module configuration, variables, and outputs, and call the module from a root configuration.
Terraform
Interactive
18min
Refactor monolithic Terraform configuration
Deploy development and production versions of an S3-hosted static website. Separate their configuration into files, directories, and workspaces, and explore the architectural trade-offs of each approach.
Terraform
Interactive
17min
Module creation - recommended pattern
Learn the architectural recommendations for module creation distilled from engagements with large enterprises using Terraform. Use Terraform module best practices to scope, build, improve and consume Terraform modules.
Terraform
24min
Manage resources in Terraform state
Create an EC2 instance and security group, and move a resource to another state file. Remove, replace, and re-import resources to manage state and reconcile drift in your infrastructure.
Terraform
20min
Target resources
Apply changes to an AWS S3 bucket and bucket objects using resource targeting. Target individual resources, modules, and collections of resources to change or destroy. Explore how Terraform handles upstream and downstream dependencies.
Terraform
12min
Manage resource drift
Create an AWS instance and security group. Manually change the instance to create drift in your Terraform state file. Reconcile your state drift and import your resources while avoiding downtime.
Terraform
10min
Use refresh-only mode to sync Terraform state
Use refresh-only plans and applies to update Terraform state to match real-world infrastructure. Understand the implicit refresh behavior in Terraform plan and apply operations.
Terraform
17min
Troubleshoot Terraform
Interpret and fix a Terraform configuration with common configuration language errors and deploy an EC2 instance with security groups in AWS. Learn best practices for logging application errors and reporting bugs.
Terraform
11min
Inject secrets into Terraform using the Vault provider
Configure the AWS Secrets Engine to manage IAM credentials in Vault through Terraform. Then use the short-lived, Vault-generated, dynamic secrets to provision EC2 instances.
Terraform
Vault
3min
Log in to HCP Terraform from the CLI
Log into HCP Terraform or Enterprise with the Terraform CLI.
Terraform
9min
Migrate state to HCP Terraform
Migrate a state file to HCP Terraform for secure storage and easy collaboration.
Terraform
5min
What is HCP Terraform - intro and sign up
Sign up for HCP Terraform.
Terraform
3min
Create a credentials variable set
Create a variable set for your AWS IAM credentials that you can reuse across workspaces. Apply the variable set to a workspace.
Terraform
4min
Create a workspace
Create a CLI-driven HCP Terraform workspace. Update configuration to enable integration with HCP Terraform.
Terraform
4min
Create infrastructure
Set EC2 instance attributes using HCP Terraform workspace variables. Create the instance by planning and applying a run in HCP Terraform.
Terraform
5min
Change infrastructure
Use command line input variables to modify infrastructure managed by HCP Terraform. Review workspace contents and interface.
Terraform
6min
Use VCS-driven workflow
Update a workspace to use the version control system-driven workflow with GitHub. Queue a speculative plan by opening a pull request.
Terraform
3min
Destroy resources and workspaces
Destroy the resources in an HCP Terraform workspace, then delete the workspace using the web UI.
Terraform
Stay Informed
Sign up to be notified with updates to the HashiCorp Product Certifications program and to receive news and information about HashiCorp products.
Email
*
Send me news about HashiCorp products, releases and events.
By submitting this form, you acknowledge and agree that HashiCorp will process your personal information in accordance with the
Privacy Policy
.
Submit